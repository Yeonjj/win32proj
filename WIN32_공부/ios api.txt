ios app 아키텍처

앱의 큰 틀은 mvc패턴을 따르고있다. 
 
모델 = data objects, document

뷰 = uiwindow, views and ui objects

컨트롤러 = uiapplication, application delegate, event loop, view controller

uiapplication = 이벤트루프를 관리한다. 
		다른 고레벨단에서 앱동작을 관리한다. 
		프로그램 사용자로부터 key 이벤트와 기타 이벤트(push notification 같은 것)들을 UIApplication의 델리게이트로 리포트한다.
 		여기서 델리게이트 오브젝트는 API 사용자에의해서 정의된다.
 		상속받지 못한다. 

APP delegate =  API사용자가 구현하는 핵심 오브젝트이다. 
		UIApplication 과 함께 app initialization, state transitions, and many high-level app events 등을 관리한다. 		
		자주 초기 앱의 데이터 구조를 초기화하는데 사용된다. 

Documents and data model objects = 
		데이터 모델 오브젝트들은 앱의 데이터들을 저장한다. 

View controller objects = 
		뷰컨트롤러는 앱의 컨텐트를 스크린에 표시하는 역할을 한다.
		하나의 뷰 컨트롤러는 하나의 뷰와 그 뷰의 서브뷰들의 집합를 관리한다. 
		뷰 컨트롤러는 그 뷰들을 앱의 window로 인스톨함으로서 실재 화면에 보이게 한다. 

		UIViewController 클래스 가 모든 뷰들의 베이스 클래스이다. 
		이 클래스가 제공하는 기능에는 다음과 같은 것들이 있다. 
		loading views, presenting them, rotating them in response to device rotations 등

UIWindow object=
		스크린의 하나이상의 뷰들을 조정한다. 
		대부분의 앱은 하나의 윈도우만 가지고있다. 
		앱의 내용을 바꾸기위해서는 뷰컨트롤러가 해당 윈도우에 뷰들을 바꾸어야한다. 
		window들(?)은 UIApplication 오브젝트와 합작하여(!) 이벤트를 뷰와 뷰컨트로러로 이벤트들을 전달한다. 

View objects, control objects, and layer objects = 
		뷰 오브젝트는 컨텐트를 지정된 사각형의 영역안에 그리는 역할과 그안에 들어오는 이벤트들을 반응하는 역할을 한다. 
		컨트롤 오브젝트는 인터페이스 오브젝트를 위한 오브젝트이다.  
		